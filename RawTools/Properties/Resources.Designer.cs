//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RawTools.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RawTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;bioml&gt;
        ///	&lt;note&gt;
        ///	Each one of the parameters for x! tandem is entered as a labeled note node. 
        ///	Any of the entries in the default_input.xml file can be over-ridden by
        ///	adding a corresponding entry to this file. This file represents a minimum
        ///	input file, with only entries for the default settings, the output file
        ///	and the input spectra file name. 
        ///	See the taxonomy.xml file for a description of how FASTA sequence list 
        ///	files are linked to a taxon name.
        ///	&lt;/note&gt;
        ///
        ///	&lt;note type [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XTandem_custom_config {
            get {
                return ResourceManager.GetString("XTandem_custom_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;tandem-input-style.xsl&quot;?&gt;
        ///&lt;bioml&gt;
        ///&lt;note&gt;list path parameters&lt;/note&gt;
        ///	&lt;note type=&quot;input&quot; label=&quot;list path, default parameters&quot;&gt;default_input.xml&lt;/note&gt;
        ///		&lt;note&gt;This value is ignored when it is present in the default parameter
        ///		list path.&lt;/note&gt;
        ///	&lt;note type=&quot;input&quot; label=&quot;list path, taxonomy information&quot;&gt;taxonomy.xml&lt;/note&gt;
        ///
        ///&lt;note&gt;spectrum parameters&lt;/note&gt;
        ///	&lt;note type=&quot;input&quot; label=&quot;spectrum, fragment monoisotopic mass error&quot;&gt;0.4&lt;/note&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XTandem_default_config {
            get {
                return ResourceManager.GetString("XTandem_default_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;bioml label=&quot;x! taxon-to-file matching list&quot;&gt;
        ///	&lt;taxon label=&quot;all&quot;&gt;
        ///	&lt;/taxon&gt;
        ///&lt;/bioml&gt;
        ///.
        /// </summary>
        internal static string XTandem_taxonomy {
            get {
                return ResourceManager.GetString("XTandem_taxonomy", resourceCulture);
            }
        }
    }
}
